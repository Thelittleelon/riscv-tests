adapter driver remote_bitbang
remote_bitbang host localhost
remote_bitbang port 9999
#debug_level 3 

#gdb port 3333
# tcl port 0
# telnet port disabled

set _CHIPNAME riscv
jtag newtap $_CHIPNAME cpu -irlen 5

target create $_CHIPNAME.cpu riscv -chain-position $_CHIPNAME.cpu

gdb report_data_abort enable
gdb report_register_access_error enable

reset_config none

init
halt

# # Set GDB to use ephemeral port (will be 0, testlib.py sẽ tìm được)
# gdb_port 0

# # Remote bitbang interface (Verilator side)
# interface remote_bitbang
# remote_bitbang_host localhost
# remote_bitbang_port 9999

# # JTAG transport (Verilator JTAG TAP module)
# transport select jtag

# # Speed setup (không ảnh hưởng tới remote_bitbang, nhưng OpenOCD cần có)
# adapter_khz 1000

# # Debug module reset
# reset_config none

# # Rất quan trọng! Không khởi tạo tại đây, để testlib.py tự khởi tạo sau
# init_target off

# adapter speed     10000

# adapter driver remote_bitbang
# remote_bitbang host localhost
# remote_bitbang port 9999

# set _CHIPNAME riscv
# jtag newtap $_CHIPNAME cpu -irlen 5 -expected-id 0xdeadbeef

# set _TARGETNAME $_CHIPNAME.cpu
# if {$::env(USE_FREERTOS)} {
#     target create $_TARGETNAME riscv -chain-position $_TARGETNAME -rtos FreeRTOS
# } else {
#     target create $_TARGETNAME riscv -chain-position $_TARGETNAME
# }
# $_TARGETNAME configure -work-area-phys $::env(WORK_AREA) -work-area-size 8096 -work-area-backup 1

# gdb_report_data_abort enable
# gdb_report_register_access_error enable

# riscv expose_csrs 2288
# riscv expose_custom 1,12345-12348

# # KHÔNG GỌI `init` Ở ĐÂY

